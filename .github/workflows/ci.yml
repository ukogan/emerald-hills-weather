name: CI - Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || echo "No lint script found, skipping"
      
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY_TEST }}
        
    - name: Test API integration
      run: |
        # Start server in background
        npm start &
        SERVER_PID=$!
        sleep 5
        
        # Test health endpoint
        curl -f http://localhost:3001/api/health || exit 1
        
        # Cleanup
        kill $SERVER_PID
      env:
        NODE_ENV: test
        PORT: 3001
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY_TEST }}

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: emerald-hills-weather:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test Docker image
      run: |
        # Build and run container
        docker build -t emerald-hills-weather:test .
        docker run -d --name test-container -p 3001:3001 \
          -e NODE_ENV=test \
          -e OPENWEATHER_API_KEY="${{ secrets.OPENWEATHER_API_KEY_TEST }}" \
          emerald-hills-weather:test
        
        # Wait for container to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:3001/api/health || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'